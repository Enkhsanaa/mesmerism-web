{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.user_roles": {
      "name": "user_roles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "app_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_roles_user_id_fkey": {
          "name": "user_roles_user_id_fkey",
          "tableFrom": "user_roles",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_roles_user_id_role_key": {
          "columns": [
            "user_id",
            "role"
          ],
          "nullsNotDistinct": false,
          "name": "user_roles_user_id_role_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "user_roles.select.self": {
          "name": "user_roles.select.self",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "user_roles.select.roles.manage": {
          "name": "user_roles.select.roles.manage",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "user_roles.manage.roles.manage": {
          "name": "user_roles.manage.roles.manage",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.coin_topups": {
      "name": "coin_topups",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "topup_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_ref": {
          "name": "provider_ref",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {
        "coin_topups_user_status_created_idx": {
          "name": "coin_topups_user_status_created_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            },
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            },
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "coin_topups_user_id_fkey": {
          "name": "coin_topups_user_id_fkey",
          "tableFrom": "coin_topups",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "coin_topups_provider_provider_ref_key": {
          "columns": [
            "provider",
            "provider_ref"
          ],
          "nullsNotDistinct": false,
          "name": "coin_topups_provider_provider_ref_key"
        }
      },
      "checkConstraints": {
        "coin_topups_amount_check": {
          "name": "coin_topups_amount_check",
          "value": "amount > 0"
        }
      },
      "policies": {
        "topups.select.self": {
          "name": "topups.select.self",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "topups.insert.self_pending": {
          "name": "topups.insert.self_pending",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "topups.manage.payments.manage": {
          "name": "topups.manage.payments.manage",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.coin_ledger": {
      "name": "coin_ledger",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "delta": {
          "name": "delta",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "reason": {
          "name": "reason",
          "type": "coin_tx_reason",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "ref_topup_id": {
          "name": "ref_topup_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "ref_vote_order_id": {
          "name": "ref_vote_order_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {
        "coin_ledger_one_per_topup": {
          "name": "coin_ledger_one_per_topup",
          "columns": [
            {
              "expression": "ref_topup_id",
              "asc": true,
              "nulls": "last",
              "opclass": "int8_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "where": "(ref_topup_id IS NOT NULL)",
          "with": {}
        },
        "coin_ledger_user_created_idx": {
          "name": "coin_ledger_user_created_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            },
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "coin_ledger_user_idx": {
          "name": "coin_ledger_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "coin_ledger_voteorder_idx": {
          "name": "coin_ledger_voteorder_idx",
          "columns": [
            {
              "expression": "ref_vote_order_id",
              "asc": true,
              "nulls": "last",
              "opclass": "int8_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "coin_ledger_user_id_fkey": {
          "name": "coin_ledger_user_id_fkey",
          "tableFrom": "coin_ledger",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "coin_ledger_vote_order_fk": {
          "name": "coin_ledger_vote_order_fk",
          "tableFrom": "coin_ledger",
          "tableTo": "vote_orders",
          "schemaTo": "public",
          "columnsFrom": [
            "ref_vote_order_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "ledger.select.self": {
          "name": "ledger.select.self",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "ledger.manage.payments.manage": {
          "name": "ledger.manage.payments.manage",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.vote_orders": {
      "name": "vote_orders",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "buyer_user_id": {
          "name": "buyer_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "creator_user_id": {
          "name": "creator_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "week_id": {
          "name": "week_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "votes": {
          "name": "votes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "coins_spent": {
          "name": "coins_spent",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "vote_orders_buyer_created_idx": {
          "name": "vote_orders_buyer_created_idx",
          "columns": [
            {
              "expression": "buyer_user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            },
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "vote_orders_week_creator_idx2": {
          "name": "vote_orders_week_creator_idx2",
          "columns": [
            {
              "expression": "week_id",
              "asc": true,
              "nulls": "last",
              "opclass": "int8_ops",
              "isExpression": false
            },
            {
              "expression": "creator_user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "int8_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "vote_orders_buyer_user_id_fkey": {
          "name": "vote_orders_buyer_user_id_fkey",
          "tableFrom": "vote_orders",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "buyer_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "vote_orders_creator_must_be_participant": {
          "name": "vote_orders_creator_must_be_participant",
          "tableFrom": "vote_orders",
          "tableTo": "week_participants",
          "schemaTo": "public",
          "columnsFrom": [
            "creator_user_id",
            "week_id"
          ],
          "columnsTo": [
            "week_id",
            "creator_user_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "vote_orders_creator_user_id_fkey": {
          "name": "vote_orders_creator_user_id_fkey",
          "tableFrom": "vote_orders",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "creator_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "vote_orders_week_id_fkey": {
          "name": "vote_orders_week_id_fkey",
          "tableFrom": "vote_orders",
          "tableTo": "competition_weeks",
          "schemaTo": "public",
          "columnsFrom": [
            "week_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "vote_orders_coins_spent_check": {
          "name": "vote_orders_coins_spent_check",
          "value": "coins_spent > 0"
        },
        "vote_orders_votes_check": {
          "name": "vote_orders_votes_check",
          "value": "votes > 0"
        }
      },
      "policies": {
        "votes.select.self": {
          "name": "votes.select.self",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(auth.uid() = buyer_user_id)"
        },
        "votes.select.view_all": {
          "name": "votes.select.view_all",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "votes.manage.view_all": {
          "name": "votes.manage.view_all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.role_permissions": {
      "name": "role_permissions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "app_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "permission": {
          "name": "permission",
          "type": "app_permission",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "role_permissions_role_permission_key": {
          "columns": [
            "role",
            "permission"
          ],
          "nullsNotDistinct": false,
          "name": "role_permissions_role_permission_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "role_permissions.select.roles.manage": {
          "name": "role_permissions.select.roles.manage",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "authorize('roles.manage'::app_permission, auth.uid())"
        },
        "role_permissions.manage.roles.manage": {
          "name": "role_permissions.manage.roles.manage",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.app_settings": {
      "name": "app_settings",
      "schema": "",
      "columns": {
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "int_value": {
          "name": "int_value",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "text_value": {
          "name": "text_value",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "json_value": {
          "name": "json_value",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "settings.manage.roles.manage": {
          "name": "settings.manage.roles.manage",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "withCheck": "authorize('roles.manage'::app_permission, auth.uid())",
          "using": "authorize('roles.manage'::app_permission, auth.uid())"
        }
      },
      "isRLSEnabled": true
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "password_hash": {
          "name": "password_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "user_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'OFFLINE'"
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "color": {
          "name": "color",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'#888888'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {
        "users_email_lower_uniq": {
          "name": "users_email_lower_uniq",
          "columns": [
            {
              "expression": "lower(email)",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": true
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_username_lower_uniq": {
          "name": "users_username_lower_uniq",
          "columns": [
            {
              "expression": "lower(username)",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": true
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "users_color_check": {
          "name": "users_color_check",
          "value": "color ~* '^#([0-9a-f]{6})$'::text"
        }
      },
      "policies": {
        "users.select.authenticated": {
          "name": "users.select.authenticated",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(auth.role() = 'authenticated'::text)"
        },
        "users.insert.self": {
          "name": "users.insert.self",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "users.update.self": {
          "name": "users.update.self",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.messages": {
      "name": "messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "author_user_id": {
          "name": "author_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "author_username": {
          "name": "author_username",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "author_avatar_url": {
          "name": "author_avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "author_color": {
          "name": "author_color",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "message_source": {
          "name": "message_source",
          "type": "message_source",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "deleted_by": {
          "name": "deleted_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "messages_author_idx": {
          "name": "messages_author_idx",
          "columns": [
            {
              "expression": "author_user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            },
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "messages_created_not_deleted_idx": {
          "name": "messages_created_not_deleted_idx",
          "columns": [
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(deleted_at IS NULL)",
          "with": {}
        }
      },
      "foreignKeys": {
        "messages_author_user_id_fkey": {
          "name": "messages_author_user_id_fkey",
          "tableFrom": "messages",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "author_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "messages_deleted_by_fkey": {
          "name": "messages_deleted_by_fkey",
          "tableFrom": "messages",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "deleted_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "messages.select.authenticated": {
          "name": "messages.select.authenticated",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(auth.role() = 'authenticated'::text)"
        },
        "messages.insert.self": {
          "name": "messages.insert.self",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "messages.insert.system": {
          "name": "messages.insert.system",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "messages.update.self_not_deleted": {
          "name": "messages.update.self_not_deleted",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "messages.update.moderate": {
          "name": "messages.update.moderate",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "short_intro": {
          "name": "short_intro",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "cover_image_url": {
          "name": "cover_image_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "intro_video_url": {
          "name": "intro_video_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "social_links": {
          "name": "social_links",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "subscriber_count": {
          "name": "subscriber_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profiles_user_id_fkey": {
          "name": "profiles_user_id_fkey",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "profiles_subscriber_count_check": {
          "name": "profiles_subscriber_count_check",
          "value": "subscriber_count >= 0"
        }
      },
      "policies": {
        "profiles.select.public": {
          "name": "profiles.select.public",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "profiles.manage.creator_self": {
          "name": "profiles.manage.creator_self",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        },
        "profiles.manage.all": {
          "name": "profiles.manage.all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.user_suspensions": {
      "name": "user_suspensions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "target_user_id": {
          "name": "target_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "reason": {
          "name": "reason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {
        "user_suspensions_target_expires_idx": {
          "name": "user_suspensions_target_expires_idx",
          "columns": [
            {
              "expression": "target_user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            },
            {
              "expression": "expires_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_suspensions_target_perm_idx": {
          "name": "user_suspensions_target_perm_idx",
          "columns": [
            {
              "expression": "target_user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(expires_at IS NULL)",
          "with": {}
        }
      },
      "foreignKeys": {
        "user_suspensions_created_by_fkey": {
          "name": "user_suspensions_created_by_fkey",
          "tableFrom": "user_suspensions",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "user_suspensions_target_user_id_fkey": {
          "name": "user_suspensions_target_user_id_fkey",
          "tableFrom": "user_suspensions",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "target_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "suspensions.select.moderate": {
          "name": "suspensions.select.moderate",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "authorize('users.moderate'::app_permission, auth.uid())"
        },
        "suspensions.manage.moderate": {
          "name": "suspensions.manage.moderate",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.competition_weeks": {
      "name": "competition_weeks",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "week_number": {
          "name": "week_number",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "starts_at": {
          "name": "starts_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "ends_at": {
          "name": "ends_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "competition_weeks_week_number_check": {
          "name": "competition_weeks_week_number_check",
          "value": "(week_number >= 1) AND (week_number <= 4)"
        }
      },
      "policies": {
        "weeks.select.public": {
          "name": "weeks.select.public",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "weeks.manage.weeks.manage": {
          "name": "weeks.manage.weeks.manage",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.week_participants": {
      "name": "week_participants",
      "schema": "",
      "columns": {
        "week_id": {
          "name": "week_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "creator_user_id": {
          "name": "creator_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "vote_orders_week_creator_idx": {
          "name": "vote_orders_week_creator_idx",
          "columns": [
            {
              "expression": "week_id",
              "asc": true,
              "nulls": "last",
              "opclass": "int8_ops",
              "isExpression": false
            },
            {
              "expression": "creator_user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "week_participants_creator_user_id_fkey": {
          "name": "week_participants_creator_user_id_fkey",
          "tableFrom": "week_participants",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "creator_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "week_participants_week_id_fkey": {
          "name": "week_participants_week_id_fkey",
          "tableFrom": "week_participants",
          "tableTo": "competition_weeks",
          "schemaTo": "public",
          "columnsFrom": [
            "week_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "week_participants_pkey": {
          "name": "week_participants_pkey",
          "columns": [
            "week_id",
            "creator_user_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "participants.select.public": {
          "name": "participants.select.public",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "participants.manage.weeks.manage": {
          "name": "participants.manage.weeks.manage",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    }
  },
  "enums": {
    "public.app_permission": {
      "name": "app_permission",
      "values": [
        "roles.manage",
        "users.moderate",
        "profiles.manage_all",
        "weeks.manage",
        "payments.manage",
        "votes.view_all"
      ],
      "schema": "public"
    },
    "public.app_role": {
      "name": "app_role",
      "values": [
        "admin",
        "moderator",
        "creator"
      ],
      "schema": "public"
    },
    "public.coin_tx_reason": {
      "name": "coin_tx_reason",
      "values": [
        "topup",
        "vote_purchase",
        "adjustment",
        "refund"
      ],
      "schema": "public"
    },
    "public.message_source": {
      "name": "message_source",
      "values": [
        "user",
        "creator",
        "moderator",
        "admin",
        "system"
      ],
      "schema": "public"
    },
    "public.topup_status": {
      "name": "topup_status",
      "values": [
        "pending",
        "confirmed",
        "failed"
      ],
      "schema": "public"
    },
    "public.user_status": {
      "name": "user_status",
      "values": [
        "ONLINE",
        "OFFLINE"
      ],
      "schema": "public"
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.user_coin_balances": {
      "name": "user_coin_balances",
      "schema": "public",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "balance": {
          "name": "balance",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT u.id AS user_id, COALESCE(sum(l.delta), 0::numeric) AS balance FROM users u LEFT JOIN coin_ledger l ON l.user_id = u.id GROUP BY u.id",
      "materialized": false
    },
    "public.app_public_settings": {
      "name": "app_public_settings",
      "schema": "public",
      "columns": {
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "int_value": {
          "name": "int_value",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "text_value": {
          "name": "text_value",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "json_value": {
          "name": "json_value",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT key, int_value, text_value, \"json_value\" FROM app_settings WHERE key = 'coins_per_vote'::text",
      "materialized": false
    }
  },
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {}
  }
}